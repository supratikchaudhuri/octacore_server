/*
 * Octacore
 * Welcome to the API documentation for our blockchain data service! Our service allows users to access and query data from various blockchain networks through a set of easy-to-use API endpoints. Whether you're looking for transaction history, block information, or on-chain analytics, our API has you covered. With our API, you can retrieve data from a variety of popular blockchain networks, including ethereum and polygon mainnets . Simply make a request to the appropriate endpoint with the necessary parameters, and you'll receive a response with the requested data in a convenient JSON format. We strive to make our API as user-friendly and reliable as possible, and are constantly working to expand our coverage and capabilities. If you have any questions or need assistance getting started, please don't hesitate to reach out to us. We hope that our API will be a valuable resource for your blockchain projects.
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@octacore.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Octacore) {
      root.Octacore = {};
    }
    root.Octacore.ModelsAddressReq = factory(root.Octacore.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ModelsAddressReq model module.
   * @module model/ModelsAddressReq
   * @version 1.0
   */

  /**
   * Constructs a new <code>ModelsAddressReq</code>.
   * @alias module:model/ModelsAddressReq
   * @class
   * @param address {String} 
   * @param chains {Array.<String>} 
   */
  var exports = function(address, chains) {
    this.address = address;
    this.chains = chains;
  };

  /**
   * Constructs a <code>ModelsAddressReq</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelsAddressReq} obj Optional instance to populate.
   * @return {module:model/ModelsAddressReq} The populated <code>ModelsAddressReq</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('address'))
        obj.address = ApiClient.convertToType(data['address'], 'String');
      if (data.hasOwnProperty('chains'))
        obj.chains = ApiClient.convertToType(data['chains'], ['String']);
    }
    return obj;
  }

  /**
   * @member {String} address
   */
  exports.prototype.address = undefined;

  /**
   * @member {Array.<String>} chains
   */
  exports.prototype.chains = undefined;


  return exports;

}));
