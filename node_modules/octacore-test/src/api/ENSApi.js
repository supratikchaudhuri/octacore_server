/*
 * Octacore
 * Welcome to the API documentation for our blockchain data service! Our service allows users to access and query data from various blockchain networks through a set of easy-to-use API endpoints. Whether you're looking for transaction history, block information, or on-chain analytics, our API has you covered. With our API, you can retrieve data from a variety of popular blockchain networks, including ethereum and polygon mainnets . Simply make a request to the appropriate endpoint with the necessary parameters, and you'll receive a response with the requested data in a convenient JSON format. We strive to make our API as user-friendly and reliable as possible, and are constantly working to expand our coverage and capabilities. If you have any questions or need assistance getting started, please don't hesitate to reach out to us. We hope that our API will be a valuable resource for your blockchain projects.
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@octacore.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD. Register as an anonymous module.
    define([
      "ApiClient",
      "model/ModelsAddressReq",
      "model/ModelsDomainReq",
    ], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(
      require("../ApiClient"),
      require("../model/ModelsAddressReq"),
      require("../model/ModelsDomainReq")
    );
  } else {
    // Browser globals (root is window)
    if (!root.Octacore) {
      root.Octacore = {};
    }
    root.Octacore.ENSApi = factory(
      root.Octacore.ApiClient,
      root.Octacore.ModelsAddressReq,
      root.Octacore.ModelsDomainReq
    );
  }
})(this, function (ApiClient, ModelsAddressReq, ModelsDomainReq) {
  "use strict";

  /**
   * ENS service.
   * @module api/ENSApi
   * @version 1.0
   */

  /**
   * Constructs a new ENSApi.
   * @alias module:api/ENSApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function (apiClient) {
    this.apiClient = apiClient || ApiClient.instance;

    /**
     * Callback function to receive the result of the ensResolvePost operation.
     * @callback module:api/ENSApi~ensResolvePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ensResolve
     * The /ensResolve API endpoint allows you to retrieve the blockchain address associated with a given Ethereum Name Service (ENS) domain. ENS is a decentralized platform that allows users to assign human-readable names to Ethereum addresses, making it easier to send transactions and interact with smart contracts. ### Use cases: + Resolving ENS domains on a wallet or exchange platform. + Allowing a user to lookup the address associated with an ENS domain within a decentralized application.
     * @param {module:model/ModelsDomainReq} input Address
     * @param {module:api/ENSApi~ensResolvePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.ensResolve = function (input, callback) {
      var postBody = input;

      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error(
          "Missing the required parameter 'input' when calling ensResolvePost"
        );
      }

      var pathParams = {};
      var queryParams = {};
      var collectionQueryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ["JWT"];
      var contentTypes = [];
      var accepts = ["application/json"];
      var returnType = null;

      return this.apiClient.callApi(
        "/ensResolve",
        "POST",
        pathParams,
        queryParams,
        collectionQueryParams,
        headerParams,
        formParams,
        postBody,
        authNames,
        contentTypes,
        accepts,
        returnType,
        callback
      );
    };

    /**
     * Callback function to receive the result of the ensReverseResolvePost operation.
     * @callback module:api/ENSApi~ensReverseResolvePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ensReverseResolve
     * The /ensReverseResolve API endpoint allows you to retrieve the Ethereum Name Service (ENS) domain associated with a given blockchain address. ENS is a decentralized platform that allows users to assign human-readable names to Ethereum addresses, making it easier to send transactions and interact with smart contracts. ### Use cases: + Reverse resolving addresses on a wallet or exchange platform. + Allowing a user to lookup the ENS domain associated with an address within a decentralized application.
     * @param {module:model/ModelsAddressReq} input Address
     * @param {module:api/ENSApi~ensReverseResolvePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.ensReverseResolve = function (input, callback) {
      var postBody = input;
      postBody["chains"] = ["ethereum"];
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error(
          "Missing the required parameter 'input' when calling ensReverseResolvePost"
        );
      }
      var pathParams = {};
      var queryParams = {};
      var collectionQueryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = ["JWT"];
      var contentTypes = [];
      var accepts = ["application/json"];
      var returnType = null;

      return this.apiClient.callApi(
        "/ensReverseResolve",
        "POST",
        pathParams,
        queryParams,
        collectionQueryParams,
        headerParams,
        formParams,
        postBody,
        authNames,
        contentTypes,
        accepts,
        returnType,
        callback
      );
    };
  };

  return exports;
});
