/*
 * Octacore
 * Welcome to the API documentation for our blockchain data service! Our service allows users to access and query data from various blockchain networks through a set of easy-to-use API endpoints. Whether you're looking for transaction history, block information, or on-chain analytics, our API has you covered. With our API, you can retrieve data from a variety of popular blockchain networks, including ethereum and polygon mainnets . Simply make a request to the appropriate endpoint with the necessary parameters, and you'll receive a response with the requested data in a convenient JSON format. We strive to make our API as user-friendly and reliable as possible, and are constantly working to expand our coverage and capabilities. If you have any questions or need assistance getting started, please don't hesitate to reach out to us. We hope that our API will be a valuable resource for your blockchain projects.
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@octacore.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Octacore);
  }
}(this, function(expect, Octacore) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Octacore.ContractsApi();
  });

  describe('(package)', function() {
    describe('ContractsApi', function() {
      describe('getApprovalEventsByContractAdressPost', function() {
        it('should call getApprovalEventsByContractAdressPost successfully', function(done) {
          // TODO: uncomment, update parameter values for getApprovalEventsByContractAdressPost call
          /*
          var input = new Octacore.ModelsTxReq();
          input.address = "";
          input.chains = [""];
          input.endBlock = 0;
          input.startBlock = 0;

          instance.getApprovalEventsByContractAdressPost(input, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTransferEventsByContractAdressPost', function() {
        it('should call getTransferEventsByContractAdressPost successfully', function(done) {
          // TODO: uncomment, update parameter values for getTransferEventsByContractAdressPost call
          /*
          var input = new Octacore.ModelsTxReq();
          input.address = "";
          input.chains = [""];
          input.endBlock = 0;
          input.startBlock = 0;

          instance.getTransferEventsByContractAdressPost(input, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('isContractPost', function() {
        it('should call isContractPost successfully', function(done) {
          // TODO: uncomment, update parameter values for isContractPost call
          /*
          var input = new Octacore.ModelsAddressReq();
          input.address = "";
          input.chains = [""];

          instance.isContractPost(input, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
